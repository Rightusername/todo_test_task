webpackHotUpdate("index",{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./node_modules/vue-svg-inline-loader/dist/index.min.js?!./src/app/views/NoteView.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-svg-inline-loader/dist/index.min.js??ref--1-1!./src/app/views/NoteView.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ \"./node_modules/babel-runtime/helpers/extends.js\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n\nvar _cloneDeep = __webpack_require__(/*! lodash-es/cloneDeep */ \"./node_modules/lodash-es/cloneDeep.js\");\n\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\nvar _common = __webpack_require__(/*! ../../utils/common */ \"./src/utils/common.js\");\n\nvar _events = __webpack_require__(/*! ../../utils/events */ \"./src/utils/events.js\");\n\nvar _NoteEditor = __webpack_require__(/*! app/components/NoteEditor.vue */ \"./src/app/components/NoteEditor.vue\");\n\nvar _NoteEditor2 = _interopRequireDefault(_NoteEditor);\n\nvar _ConfirmModal = __webpack_require__(/*! app/components/modals/ConfirmModal.vue */ \"./src/app/components/modals/ConfirmModal.vue\");\n\nvar _ConfirmModal2 = _interopRequireDefault(_ConfirmModal);\n\nvar _Todo = __webpack_require__(/*! app/components/Todo.vue */ \"./src/app/components/Todo.vue\");\n\nvar _Todo2 = _interopRequireDefault(_Todo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'NoteView',\n  components: {\n    NoteEditor: _NoteEditor2.default,\n    Todo: _Todo2.default\n  },\n  data: function data() {\n    return {\n      note: null\n    };\n  },\n\n  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['notes'])),\n\n  created: function created() {\n    var _this = this;\n\n    this.note = (0, _cloneDeep2.default)(this.notes.find(function (i) {\n      return i.id == _this.$route.params.id;\n    }), true);\n    if (!this.note) {\n      this.$router.push('/');\n    }\n  },\n  beforeDestroy: function beforeDestroy() {},\n  mounted: function mounted() {},\n\n\n  methods: {\n    saveNote: function saveNote() {\n      this.$store.dispatch('NOTE_EDIT', this.note);\n    },\n    addTodo: function addTodo() {\n      var todo = {\n        title: '',\n        completed: false,\n        id: (0, _common.generateID)()\n      };\n      this.note.todos.push(todo);\n      setTimeout(function () {\n        _events.events.emit('TODO_SET_EDITABLE', todo.id);\n      }, 50);\n    },\n    removeNote: function removeNote(note) {\n      var _this2 = this;\n\n      this.$modal.show(_ConfirmModal2.default, {\n        data: {\n          title: 'Remove note',\n          text: 'Are you sure you want to remove this note?',\n          btns: {\n            confirm: {\n              title: 'Remove',\n              callback: function callback() {\n                _this2.$store.dispatch('NOTE_REMOVE', note.id);\n              }\n            }\n          }\n        }\n      }, {\n        transition: 'fade'\n      });\n    },\n    onTodoRemove: function onTodoRemove(todo) {\n      var _this3 = this;\n\n      this.note.todos.find(function (item, index) {\n        if (item && item.id == todo.id) {\n          _this3.note.todos.splice(index, 1);\n          return;\n        }\n      });\n    }\n  }\n}; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./node_modules/vue-svg-inline-loader/dist/index.min.js?!./src/app/views/NoteView.vue?vue&type=script&lang=js&\n");

/***/ })

})
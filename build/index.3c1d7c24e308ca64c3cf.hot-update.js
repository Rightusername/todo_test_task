webpackHotUpdate("index",{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./node_modules/vue-svg-inline-loader/dist/index.min.js?!./src/app/views/NoteView.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-svg-inline-loader/dist/index.min.js??ref--1-1!./src/app/views/NoteView.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ \"./node_modules/babel-runtime/helpers/extends.js\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n\nvar _cloneDeep = __webpack_require__(/*! lodash-es/cloneDeep */ \"./node_modules/lodash-es/cloneDeep.js\");\n\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\nvar _common = __webpack_require__(/*! ../../utils/common */ \"./src/utils/common.js\");\n\nvar _NoteEditor = __webpack_require__(/*! app/components/NoteEditor.vue */ \"./src/app/components/NoteEditor.vue\");\n\nvar _NoteEditor2 = _interopRequireDefault(_NoteEditor);\n\nvar _ConfirmModal = __webpack_require__(/*! app/components/modals/ConfirmModal.vue */ \"./src/app/components/modals/ConfirmModal.vue\");\n\nvar _ConfirmModal2 = _interopRequireDefault(_ConfirmModal);\n\nvar _Todo = __webpack_require__(/*! app/components/Todo.vue */ \"./src/app/components/Todo.vue\");\n\nvar _Todo2 = _interopRequireDefault(_Todo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexports.default = {\n  name: 'NoteView',\n  components: {\n    NoteEditor: _NoteEditor2.default,\n    Todo: _Todo2.default\n  },\n  data: function data() {\n    return {\n      note: null,\n      lastCreatedTask: null,\n      isSaved: true\n    };\n  },\n\n  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['notes'])),\n\n  created: function created() {\n    var _this = this;\n\n    this.note = (0, _cloneDeep2.default)(this.notes.find(function (i) {\n      return i.id == _this.$route.params.id;\n    }), true);\n    if (!this.note) {\n      this.$router.push('/');\n    }\n  },\n  beforeDestroy: function beforeDestroy() {},\n  mounted: function mounted() {},\n\n\n  methods: {\n    saveNote: function saveNote() {\n      this.$store.dispatch('NOTE_EDIT', this.note);\n      this.setSaved(true);\n    },\n    addTodo: function addTodo() {\n      var _this2 = this;\n\n      var todo = {\n        title: '',\n        completed: false,\n        id: (0, _common.generateID)()\n      };\n      this.note.todos.push(todo);\n      this.lastCreatedTask = todo;\n      this.setSaved(false);\n\n      setTimeout(function () {\n        _this2.lastCreatedTask = null;\n      }, 50);\n    },\n    removeNote: function removeNote() {\n      var _this3 = this;\n\n      this.$modal.show(_ConfirmModal2.default, {\n        data: {\n          title: 'Remove note',\n          text: 'Are you sure you want to remove this note?',\n          btns: {\n            confirm: {\n              title: 'Remove',\n              callback: function callback() {\n                _this3.$store.dispatch('NOTE_REMOVE', _this3.note.id);\n                _this3.$router.push('/');\n              }\n            }\n          }\n        }\n      }, {\n        transition: 'fade'\n      });\n    },\n    setSaved: function setSaved(value) {\n      this.isSaved = value;\n    },\n    onTodoRemove: function onTodoRemove(todo) {\n      var _this4 = this;\n\n      this.note.todos.find(function (item, index) {\n        if (item && item.id == todo.id) {\n          _this4.note.todos.splice(index, 1);\n          return;\n        }\n      });\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2FwcC92aWV3cy9Ob3RlVmlldy52dWU/ZTI2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBeUNBOztBQUVBOzs7O0FBQ0E7O0FBRUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQkFFQTtBQUNBLGtCQURBO0FBRUE7QUFDQSxvQ0FEQTtBQUVBO0FBRkEsR0FGQTtBQU1BLE1BTkEsa0JBTUE7QUFDQTtBQUNBLGdCQURBO0FBRUEsMkJBRkE7QUFHQTtBQUhBO0FBS0EsR0FaQTs7QUFhQSx1Q0FDQSxnQ0FEQSxDQWJBOztBQWlCQSxTQWpCQSxxQkFpQkE7QUFBQTs7QUFDQSx5Q0FDQTtBQUFBO0FBQUEsTUFEQSxFQUVBLElBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQSxHQXpCQTtBQTJCQSxlQTNCQSwyQkEyQkEsRUEzQkE7QUE2QkEsU0E3QkEscUJBNkJBLEVBN0JBOzs7QUErQkE7QUFDQSxZQURBLHNCQUNBO0FBQ0E7QUFDQTtBQUNBLEtBSkE7QUFNQSxXQU5BLHFCQU1BO0FBQUE7O0FBQ0E7QUFDQSxpQkFEQTtBQUVBLHdCQUZBO0FBR0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FGQSxFQUVBLEVBRkE7QUFHQSxLQW5CQTtBQXFCQSxjQXJCQSx3QkFxQkE7QUFBQTs7QUFDQSx1QkFDQSxzQkFEQSxFQUVBO0FBQ0E7QUFDQSw4QkFEQTtBQUVBLDREQUZBO0FBR0E7QUFDQTtBQUNBLDZCQURBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQURBO0FBSEE7QUFEQSxPQUZBLEVBaUJBO0FBQ0E7QUFEQSxPQWpCQTtBQXFCQSxLQTNDQTtBQTZDQSxZQTdDQSxvQkE2Q0EsS0E3Q0EsRUE2Q0E7QUFDQTtBQUNBLEtBL0NBO0FBaURBLGdCQWpEQSx3QkFpREEsSUFqREEsRUFpREE7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FMQTtBQU1BO0FBeERBO0FBL0JBLEMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvdnVlLXN2Zy1pbmxpbmUtbG9hZGVyL2Rpc3QvaW5kZXgubWluLmpzPyEuL3NyYy9hcHAvdmlld3MvTm90ZVZpZXcudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJi5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cclxuICA8ZGl2IHYtaWY9XCJub3RlXCIgY2xhc3M9XCJhcHAtbm90ZS12aWV3XCI+XHJcbiAgICA8cm91dGVyLWxpbmsgdG89XCIvXCIgY2xhc3M9XCJiYWNrLWJ0blwiPlxyXG4gICAgICA8c3ZnIGhlaWdodD1cIjUxMnB4XCIgIHN0eWxlPVwiZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyO1wiIHZlcnNpb249XCIxLjFcIiB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiB3aWR0aD1cIjUxMnB4XCIgeG1sOnNwYWNlPVwicHJlc2VydmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIgdi1iaW5kOnN2Zy1pbmxpbmU9XCInJ1wiIHYtYmluZDpyb2xlPVwiJ3ByZXNlbnRhdGlvbidcIiB2LWJpbmQ6Zm9jdXNhYmxlPVwiJ2ZhbHNlJ1wiIHYtYmluZDp0YWJpbmRleD1cIictMSdcIj48cGF0aCBkPVwiTTQwNS4yLDIzMi45TDEyNi44LDY3LjJjLTMuNC0yLTYuOS0zLjItMTAuOS0zLjJjLTEwLjksMC0xOS44LDktMTkuOCwyMEg5NnYzNDRoMC4xYzAsMTEsOC45LDIwLDE5LjgsMjAgIGM0LjEsMCw3LjUtMS40LDExLjItMy40bDI3OC4xLTE2NS41YzYuNi01LjUsMTAuOC0xMy44LDEwLjgtMjMuMUM0MTYsMjQ2LjcsNDExLjgsMjM4LjUsNDA1LjIsMjMyLjl6XCIvPjwvc3ZnPlxyXG4gICAgPC9yb3V0ZXItbGluaz5cclxuXHJcbiAgICA8ZGl2IGNsYXNzPVwibWFpbi1zZWN0aW9uXCI+XHJcbiAgICAgIDxoZWFkZXI+XHJcbiAgICAgICAgPGgxPlxyXG4gICAgICAgICAge3sgbm90ZS50aXRsZSB9fVxyXG4gICAgICAgIDwvaDE+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRyb2xzXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVtb3ZlLWJ0biBzZWNvbmRhcnktYnRuXCIgQGNsaWNrPVwicmVtb3ZlTm90ZVwiPlJlbW92ZTwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInNhdmUtYnRuIHByaW1hcnktYnRuXCIgOmNsYXNzPVwie2Rpc2FibGVkOiBpc1NhdmVkfVwiIEBjbGljaz1cInNhdmVOb3RlXCI+U2F2ZTwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2hlYWRlcj5cclxuICAgICAgPGRpdiBjbGFzcz1cIm5vdGUtd3JhcFwiPlxyXG4gICAgICAgIDxOb3RlRWRpdG9yIHYtbW9kZWw9XCJub3RlLnRleHRcIiAvPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0b2RvLWxpc3RcIj5cclxuICAgICAgICAgIDxoMj5cclxuICAgICAgICAgICAgPHNwYW4+XHJcbiAgICAgICAgICAgICAgVG9kbyBMaXN0XHJcbiAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFkZC10b2RvLWJ0biBzZWNvbmRhcnktYnRuXCIgQGNsaWNrPVwiYWRkVG9kb1wiPk5ldyBUYXNrPC9kaXY+XHJcbiAgICAgICAgICA8L2gyPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInQtdG9kb3NcIj5cclxuICAgICAgICAgICAgPGRpdiB2LWZvcj1cIih0b2RvLCBpbmRleCkgaW4gbm90ZS50b2Rvc1wiIDprZXk9XCJ0b2RvLmlkXCIgY2xhc3M9XCJ0b2RvXCI+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvdW50ZXJcIj57eyBpbmRleCArIDEgfX0uPC9kaXY+XHJcbiAgICAgICAgICAgICAgPFRvZG8gOmxhc3RDcmVhdGVkVGFzaz1cImxhc3RDcmVhdGVkVGFza1wiIDp0b2RvPVwidG9kb1wiIEByZW1vdmU9XCJvblRvZG9SZW1vdmUodG9kbylcIiAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiB2LWlmPVwibm90ZS50b2Rvcy5sZW5ndGggPT0gMFwiIGNsYXNzPVwiZW1wdHktbGFiZWxcIj5cclxuICAgICAgICAgICAgICBObyB0YXNrcyB5ZXRcclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JztcclxuXHJcbmltcG9ydCBjbG9uZWRlZXAgZnJvbSAnbG9kYXNoLWVzL2Nsb25lRGVlcCc7XHJcbmltcG9ydCB7IGdlbmVyYXRlSUQgfSBmcm9tICcuLi8uLi91dGlscy9jb21tb24nO1xyXG5cclxuaW1wb3J0IE5vdGVFZGl0b3IgZnJvbSAnYXBwL2NvbXBvbmVudHMvTm90ZUVkaXRvci52dWUnO1xyXG5pbXBvcnQgQ29uZnJpbU1vZGFsIGZyb20gJ2FwcC9jb21wb25lbnRzL21vZGFscy9Db25maXJtTW9kYWwudnVlJztcclxuaW1wb3J0IFRvZG8gZnJvbSAnYXBwL2NvbXBvbmVudHMvVG9kby52dWUnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6ICdOb3RlVmlldycsXHJcbiAgY29tcG9uZW50czoge1xyXG4gICAgTm90ZUVkaXRvcixcclxuICAgIFRvZG8sXHJcbiAgfSxcclxuICBkYXRhKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbm90ZTogbnVsbCxcclxuICAgICAgbGFzdENyZWF0ZWRUYXNrOiBudWxsLFxyXG4gICAgICBpc1NhdmVkOiB0cnVlLFxyXG4gICAgfTtcclxuICB9LFxyXG4gIGNvbXB1dGVkOiB7XHJcbiAgICAuLi5tYXBHZXR0ZXJzKFsnbm90ZXMnXSksXHJcbiAgfSxcclxuXHJcbiAgY3JlYXRlZCgpIHtcclxuICAgIHRoaXMubm90ZSA9IGNsb25lZGVlcChcclxuICAgICAgdGhpcy5ub3Rlcy5maW5kKGkgPT4gaS5pZCA9PSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpLFxyXG4gICAgICB0cnVlXHJcbiAgICApO1xyXG4gICAgaWYgKCF0aGlzLm5vdGUpIHtcclxuICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKTtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBiZWZvcmVEZXN0cm95KCkge30sXHJcblxyXG4gIG1vdW50ZWQoKSB7fSxcclxuXHJcbiAgbWV0aG9kczoge1xyXG4gICAgc2F2ZU5vdGUoKSB7XHJcbiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdOT1RFX0VESVQnLCB0aGlzLm5vdGUpO1xyXG4gICAgICB0aGlzLnNldFNhdmVkKHRydWUpO1xyXG4gICAgfSxcclxuXHJcbiAgICBhZGRUb2RvKCkge1xyXG4gICAgICBsZXQgdG9kbyA9IHtcclxuICAgICAgICB0aXRsZTogJycsXHJcbiAgICAgICAgY29tcGxldGVkOiBmYWxzZSxcclxuICAgICAgICBpZDogZ2VuZXJhdGVJRCgpLFxyXG4gICAgICB9O1xyXG4gICAgICB0aGlzLm5vdGUudG9kb3MucHVzaCh0b2RvKTtcclxuICAgICAgdGhpcy5sYXN0Q3JlYXRlZFRhc2sgPSB0b2RvO1xyXG4gICAgICB0aGlzLnNldFNhdmVkKGZhbHNlKTtcclxuXHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHRoaXMubGFzdENyZWF0ZWRUYXNrID0gbnVsbDtcclxuICAgICAgfSwgNTApO1xyXG4gICAgfSxcclxuXHJcbiAgICByZW1vdmVOb3RlKCkge1xyXG4gICAgICB0aGlzLiRtb2RhbC5zaG93KFxyXG4gICAgICAgIENvbmZyaW1Nb2RhbCxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIHRpdGxlOiAnUmVtb3ZlIG5vdGUnLFxyXG4gICAgICAgICAgICB0ZXh0OiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJlbW92ZSB0aGlzIG5vdGU/JyxcclxuICAgICAgICAgICAgYnRuczoge1xyXG4gICAgICAgICAgICAgIGNvbmZpcm06IHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnUmVtb3ZlJyxcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdOT1RFX1JFTU9WRScsIHRoaXMubm90ZS5pZCk7XHJcbiAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgdHJhbnNpdGlvbjogJ2ZhZGUnLFxyXG4gICAgICAgIH1cclxuICAgICAgKTtcclxuICAgIH0sXHJcblxyXG4gICAgc2V0U2F2ZWQodmFsdWUpIHtcclxuICAgICAgdGhpcy5pc1NhdmVkID0gdmFsdWU7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uVG9kb1JlbW92ZSh0b2RvKSB7XHJcbiAgICAgIHRoaXMubm90ZS50b2Rvcy5maW5kKChpdGVtLCBpbmRleCkgPT4ge1xyXG4gICAgICAgIGlmIChpdGVtICYmIGl0ZW0uaWQgPT0gdG9kby5pZCkge1xyXG4gICAgICAgICAgdGhpcy5ub3RlLnRvZG9zLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgfSxcclxufTtcclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XHJcbkBpbXBvcnQgJ35zdHlsZXMvX21peGlucy5zY3NzJztcclxuXHJcbi5hcHAtbm90ZS12aWV3IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1pbi1oZWlnaHQ6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBwYWRkaW5nLXJpZ2h0OiA1MHB4O1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgei1pbmRleDogMTAwO1xyXG4gIHRvcDogMHB4O1xyXG4gIGxlZnQ6IDBweDtcclxuICBiYWNrZ3JvdW5kOiB2YXIoLS1iYWNrZ3JvdW5kLWRhcmtlc3QtY29sb3IpO1xyXG5cclxuICAuYmFjay1idG4ge1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBmbGV4LXNocmluazogMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pbnB1dC1iZyk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgIHN2ZyB7XHJcbiAgICAgIHdpZHRoOiAxN3B4O1xyXG4gICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjFzIGVhc2U7XHJcbiAgICAgIHBhdGgge1xyXG4gICAgICAgIGZpbGw6IHZhcigtLWlucHV0LWNvbG9yKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbGVmdDogMHB4O1xyXG4gICAgICB0b3A6IDBweDtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZTtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcclxuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCB2YXIoLS1pbnB1dC1ib3JkZXItY29sb3IpIDAlLCB0cmFuc3BhcmVudCAzMCUpO1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAmOjphZnRlcntcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzdmcge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZykgdHJhbnNsYXRlWCgzcHgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBoZWFkZXIge1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgaDEge1xyXG4gICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRyb2xzIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgIC5yZW1vdmUtYnRuIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5tYWluLXNlY3Rpb24ge1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gICAgcGFkZGluZzogMCAyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDExMDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG5cclxuICAgIC5ub3RlLXdyYXAge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAvLyBoZWlnaHQ6IDEwMCU7O1xyXG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEwMHB4KTtcclxuXHJcbiAgICAgIC5hcHAtbm90ZS1lZGl0b3Ige1xyXG4gICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgZmxleC1zaHJpbms6IDA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC50b2RvLWxpc3Qge1xyXG4gICAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgaDIge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgaGVpZ2h0OiA0MXB4O1xyXG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAudC10b2RvcyB7XHJcbiAgICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDYxcHgpO1xyXG4gICAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICAgICAgIC50b2RvIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgICAgICAuY291bnRlciB7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG48L3N0eWxlPlxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./node_modules/vue-svg-inline-loader/dist/index.min.js?!./src/app/views/NoteView.vue?vue&type=script&lang=js&\n");

/***/ })

})